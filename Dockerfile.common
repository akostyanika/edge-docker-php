WORKDIR /var/www

ENTRYPOINT ["/entrypoint.sh"]

CMD ["/launch.sh"]

ARG DEBIAN_FRONTEND=noninteractive

ENV PHP_VERSION=${PHP_VERSION} \
    NODE_VERSION=${NODE_VERSION} \
    COMPOSER_VERSION=${COMPOSER_VERSION:-2} \
    ENABLE_PHP=On \
    ENABLE_REDIS=Off \
    ENABLE_CRON=Off \
    ENABLE_SSH=Off \
    ENABLE_DEV=Off \
    NEWRELIC_LICENSE= \
    NGINX_CONF=default \
    NGINX_PORT=8080 \
    NODE_PORT=3000 \
    NODE_START= \
    PHP_DISPLAY_ERRORS=Off \
    PHP_OPCACHE_VALIDATE=On \
    PHP_MAX_CHILDREN=30 \
    PHP_TIMEZONE=Europe/London \
    PUPPETEER_SKIP_CHROMIUM_DOWNLOAD=true \
    NUXT_TELEMETRY_DISABLED=1 \
    NEXT_TELEMETRY_DISABLED=1 \
    SSH_PORT=2222 \
    CHISEL_PORT=8022 \
    WEB_ROOT=/var/www \
    WEB_PUBLIC= \
    COMPOSER_MEMORY_LIMIT=-1 \
    COMPOSER_PROCESS_TIMEOUT=600 \
    XDEBUG_ENABLE=Off \
    XDEBUG_HOST= \
    SMTP_HOST=smtp.mailtrap.io \
    SMTP_PORT=2525 \
    SMTP_USER= \
    SMTP_PASS= \
    SMTP_FROM=

RUN apt-get update \
    && apt-get install --no-install-recommends --yes \
        bash-completion \
        ca-certificates \
        cron \
        curl \
        debconf \
        git \
        gnupg \
        less \
        msmtp \
        nano \
        patch \
        pipx \
        rsync \
        ssh \
        sudo \
        supervisor \
        unzip \
        wget \
    && echo 'debconf debconf/frontend select Noninteractive' | debconf-set-selections \
    && . /etc/lsb-release \
    # PHP & Nginx
    && echo "deb http://ppa.launchpad.net/ondrej/php/ubuntu $DISTRIB_CODENAME main" >> /etc/apt/sources.list \
    && echo "deb-src http://ppa.launchpad.net/ondrej/php/ubuntu $DISTRIB_CODENAME main" >> /etc/apt/sources.list \
    && echo "deb http://ppa.launchpad.net/ondrej/nginx/ubuntu $DISTRIB_CODENAME main" >> /etc/apt/sources.list \
    && echo "deb-src http://ppa.launchpad.net/ondrej/nginx/ubuntu $DISTRIB_CODENAME main" >> /etc/apt/sources.list \
    && apt-key adv --keyserver keyserver.ubuntu.com --recv-keys 4F4EA0AAE5267A6C \
    # New Relic
    && apt-config dump | grep -we 'APT::Key::Assert-Pubkey-Algo "' | sed 's/";/,dsa1024";/' | tee /etc/apt/apt.conf.d/99PubKeyAlgoWorkaround \
    && echo "deb http://apt.newrelic.com/debian/ newrelic non-free" >> /etc/apt/sources.list \
    && wget -O- https://download.newrelic.com/548C16BF.gpg | sudo apt-key add - \
    # For older node, install 20.04 compatible release then downgrade in build.sh
    && if [ "$NODE_VERSION" -lt "10" ]; then export NODE_VERSION=14; fi \
    && curl -fsSL https://deb.nodesource.com/setup_${NODE_VERSION}.x | sudo bash - \
    # Install all packages
    && apt-get update \
    && apt-get install --no-install-recommends --yes \
        newrelic-php5 \
        nginx \
        nodejs \
        redis-server \
        # PHP
        php${PHP_VERSION}-fpm \
        php${PHP_VERSION}-bcmath \
        php${PHP_VERSION}-common \
        php${PHP_VERSION}-curl \
        php${PHP_VERSION}-intl \
        php${PHP_VERSION}-mbstring \
        php${PHP_VERSION}-mysql \
        php${PHP_VERSION}-opcache \
        php${PHP_VERSION}-soap \
        php${PHP_VERSION}-sqlite3 \
        php${PHP_VERSION}-xml \
        php${PHP_VERSION}-xsl \
        php${PHP_VERSION}-zip \
        php${PHP_VERSION}-xdebug \
        php${PHP_VERSION}-redis \
        # Cleanup
    && rm -Rf /var/www/* \
    && rm -rf /var/lib/apt/lists/*

COPY . /

RUN /build.sh

USER edge

EXPOSE $NGINX_PORT
